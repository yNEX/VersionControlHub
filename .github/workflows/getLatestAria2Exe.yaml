name: Update Aria2 EXE

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight

jobs:
  update-exe:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Download and unzip latest Aria2 release
        run: |
          echo "Downloading latest Aria2 win-64bit zip..."
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/aria2/aria2/releases/latest |
          jq -r '.assets[] | select(.name | test("win-64bit.*\\.zip")) | .browser_download_url')
          if [[ -z "$DOWNLOAD_URL" ]]; then
            echo "Download URL not found"
            exit 1
          fi
          wget -O aria2-win-64bit.zip "$DOWNLOAD_URL"
          unzip aria2-win-64bit.zip -d ./aria2-release

      - name: Copy local aria2c.exe
        run: |
          cp aria2c.exe ./aria2-release/aria2c-local.exe

      - name: Compare versions and update if necessary
        run: |
          LOCAL_VERSION=$(./aria2-release/aria2c-local.exe --version | grep -oP 'aria2 (\d+\.?)+')
          DOWNLOADED_VERSION=$(unzip -p ./aria2-release/aria2c.exe --version | grep -oP 'aria2 (\d+\.?)+')

          if [[ "$DOWNLOADED_VERSION" != "$LOCAL_VERSION" ]]; then
            echo "Newer version found. Uploading exe to GitHub..."
            mv ./aria2-release/aria2c.exe ./aria2c.exe  # Ãœberschreibe die lokale Datei
            git config --global user.email "ynexgaming@gmail.com"
            git config --global user.name "yNEX"
            git add aria2c.exe
            git commit -m "Update aria2 executable to latest version"
            git push origin HEAD:main
          else
            echo "No newer version found. Exiting without updating."
          fi
